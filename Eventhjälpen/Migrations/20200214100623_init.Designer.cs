// <auto-generated />
using System;
using Eventhjalpen.Data;
using Eventhjälpen.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Eventhjälpen.Migrations
{
    [DbContext(typeof(EventhjalpenContext))]
    [Migration("20200214100623_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Eventhjälpen.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Category");
                });

            modelBuilder.Entity("Eventhjälpen.Models.EventDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EventId")
                        .HasColumnName("EventID")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnName("RecipeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("EventId");

                    b.HasIndex("RecipeId");

                    b.ToTable("EventDetails");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Events", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EventName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("EventType")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Orderdetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("OrdersId")
                        .HasColumnName("OrdersID")
                        .HasColumnType("int");

                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrdersId");

                    b.HasIndex("ProductId");

                    b.ToTable("Orderdetails");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Orders", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime?>("CurrentDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("SumToPay")
                        .HasColumnType("int");

                    b.Property<int?>("UserId")
                        .HasColumnName("UserID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Products", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CategoryId")
                        .HasColumnName("CategoryID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("ProductName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Recipe", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("EstimatedTime")
                        .HasColumnType("int");

                    b.Property<string>("RecipeName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<int?>("RecipeTypeId")
                        .HasColumnName("RecipeTypeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RecipeTypeId");

                    b.ToTable("Recipe");
                });

            modelBuilder.Entity("Eventhjälpen.Models.RecipeDetails", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("ProductId")
                        .HasColumnName("ProductID")
                        .HasColumnType("int");

                    b.Property<int?>("RecipeId")
                        .HasColumnName("RecipeID")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProductId");

                    b.HasIndex("RecipeId");

                    b.ToTable("RecipeDetails");
                });

            modelBuilder.Entity("Eventhjälpen.Models.RecipeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RecipeTypeName")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("RecipeType");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Firstname")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Lastname")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.Property<string>("Phonenumber")
                        .HasColumnType("varchar(255)")
                        .HasMaxLength(255)
                        .IsUnicode(false);

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Eventhjälpen.Models.EventDetails", b =>
                {
                    b.HasOne("Eventhjälpen.Models.Events", "Event")
                        .WithMany("EventDetails")
                        .HasForeignKey("EventId")
                        .HasConstraintName("FK__EventDeta__Event__3C69FB99");

                    b.HasOne("Eventhjälpen.Models.Recipe", "Recipe")
                        .WithMany("EventDetails")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__EventDeta__Recip__3B75D760");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Orderdetails", b =>
                {
                    b.HasOne("Eventhjälpen.Models.Orders", "Orders")
                        .WithMany("Orderdetails")
                        .HasForeignKey("OrdersId")
                        .HasConstraintName("FK__Orderdeta__Order__2D27B809");

                    b.HasOne("Eventhjälpen.Models.Products", "Product")
                        .WithMany("Orderdetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__Orderdeta__Produ__2E1BDC42");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Orders", b =>
                {
                    b.HasOne("Eventhjälpen.Models.Users", "User")
                        .WithMany("Orders")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK__Orders__UserID__25869641");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Products", b =>
                {
                    b.HasOne("Eventhjälpen.Models.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .HasConstraintName("FK__Products__Catego__2A4B4B5E");
                });

            modelBuilder.Entity("Eventhjälpen.Models.Recipe", b =>
                {
                    b.HasOne("Eventhjälpen.Models.RecipeType", "RecipeType")
                        .WithMany("Recipe")
                        .HasForeignKey("RecipeTypeId")
                        .HasConstraintName("FK__Recipe__RecipeTy__32E0915F");
                });

            modelBuilder.Entity("Eventhjälpen.Models.RecipeDetails", b =>
                {
                    b.HasOne("Eventhjälpen.Models.Products", "Product")
                        .WithMany("RecipeDetails")
                        .HasForeignKey("ProductId")
                        .HasConstraintName("FK__RecipeDet__Produ__36B12243");

                    b.HasOne("Eventhjälpen.Models.Recipe", "Recipe")
                        .WithMany("RecipeDetails")
                        .HasForeignKey("RecipeId")
                        .HasConstraintName("FK__RecipeDet__Recip__35BCFE0A");
                });
#pragma warning restore 612, 618
        }
    }
}
